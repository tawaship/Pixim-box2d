{"version":3,"file":"Pixim-box2d.min.js","sources":["../src/modules/Box2dAlias.ts","../src/modules/utils.ts","../src/modules/WorldContainer.ts","../src/modules/Box2dObject.ts","../src/modules/Circle.ts","../src/modules/Rectangle.ts","../src/modules/Polygon.ts","../src/modules/Edge.ts"],"sourcesContent":["import { Dynamics, Collision, Common } from '@tawaship/box2dweb-module';\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Vec2 = Common.Math.b2Vec2; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import DebugDraw = Dynamics.b2DebugDraw; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import World = Dynamics.b2World; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Contact = Dynamics.Contacts.b2Contact; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import ContactListener = Dynamics.b2ContactListener; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import BodyDef = Dynamics.b2BodyDef; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import FixtureDef = Dynamics.b2FixtureDef; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Body = Dynamics.b2Body; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import CircleShape = Collision.Shapes.b2CircleShape; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import PolygonShape = Collision.Shapes.b2PolygonShape; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import EdgeShape = Collision.Shapes.b2EdgeShape; // eslint-disable-line @typescript-eslint/no-unused-vars","/**\r\n * @ignore\r\n */\r\nexport const Box2dToPixi = 30;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport const PixiToBox2d = 1 / Box2dToPixi;","import { Container, Task, ITickerData } from '@tawaship/pixim.js';\r\nimport { Vec2, World, Contact, ContactListener, DebugDraw } from './Box2dAlias';\r\nimport { Box2dObject } from './Box2dObject';\r\nimport { Box2dToPixi, PixiToBox2d } from './utils';\r\n\r\nexport interface IWorldContainerData {\r\n\tworld: World;\r\n\tlistener: ContactListener;\r\n\tenabled: boolean;\r\n\tspeed: number;\r\n\ttargets: { [id: number]: Box2dObject };\r\n\tdeletes: { [id: number]: Box2dObject };\r\n\ttask: Task;\r\n\tdisplayOffsetX: number;\r\n\tdisplayOffsetY: number;\r\n\tdisplayAngle: number;\r\n\tperspectiveRatio: number;\r\n\tisDisplayNegative: boolean;\r\n}\r\n\r\nexport interface IWorldContainerOption {\r\n\tgravityX?: number;\r\n\tgravityY?: number;\r\n\tallowSleep?: boolean;\r\n\tlistenBeginContact?: boolean;\r\n\tlistenEndContact?: boolean;\r\n\tlistenPreSolve?: boolean;\r\n\tlistenPostSolve?: boolean;\r\n\tdisplayOffsetX?: number;\r\n\tdisplayOffsetY?: number;\r\n\tdisplayAngle?: number;\r\n\tperspectiveRatio?: number;\r\n\tisDisplayNegative?: boolean;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction beginContactHandler(contact: Contact) {\r\n\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\r\n\tdataA && dataA.emit && dataA.emit('BeginContact', dataB);\r\n\tdataB && dataB.emit && dataB.emit('BeginContact', dataA);\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction endContactHandler(contact: Contact) {\r\n\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\r\n\tdataA && dataA.emit && dataA.emit('EndContact', dataB);\r\n\tdataB && dataB.emit && dataB.emit('EndContact', dataA);\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction preSolveHandler(contact: Contact) {\r\n\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\r\n\tdataA && dataA.emit && dataA.emit('PreSolve', dataB);\r\n\tdataB && dataB.emit && dataB.emit('PreSolve', dataA);\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction postSolveHandler(contact: Contact) {\r\n\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\r\n\tdataA && dataA.emit && dataA.emit('PostSolve', dataB);\r\n\tdataB && dataB.emit && dataB.emit('PostSolve', dataA);\r\n}\r\n\r\n/**\r\n * [[https://tawaship.github.io/Pixim.js/classes/container.html | Pixim.Container]]\r\n */\r\nexport class WorldContainer extends Container {\r\n\tprivate _box2dData: IWorldContainerData;\r\n\tdeclare children: Box2dObject[];\r\n\t\r\n\tconstructor(options: IWorldContainerOption) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst gravityX = typeof(options.gravityX) === 'number' ? options.gravityX : 0;\r\n\t\tconst gravityY = typeof(options.gravityY) === 'number' ? options.gravityY : 9.8;\r\n\t\tconst allowSleep = !!options.allowSleep;\r\n\t\t\r\n\t\tconst world = new World(new Vec2(gravityX, gravityY), allowSleep);\r\n\t\t\r\n\t\tthis._box2dData = {\r\n\t\t\tworld,\r\n\t\t\tlistener: new ContactListener(),\r\n\t\t\tenabled: true,\r\n\t\t\tspeed: 1,\r\n\t\t\ttargets: {},\r\n\t\t\tdeletes: {},\r\n\t\t\ttask: new Task([], this),\r\n\t\t\tdisplayOffsetX: options.displayOffsetX || 0,\r\n\t\t\tdisplayOffsetY: options.displayOffsetY || 0,\r\n\t\t\tdisplayAngle: options.displayAngle || 0,\r\n\t\t\tperspectiveRatio: options.perspectiveRatio || 1000,\r\n\t\t\tisDisplayNegative: options.isDisplayNegative || false\r\n\t\t};\r\n\t\t\r\n\t\tthis._box2dData.task.add((e: ITickerData) => {\r\n\t\t\tthis._handleTick(e.delta);\r\n\t\t});\r\n\t\tthis._box2dData.task.first();\r\n\t\t\r\n\t\tconst listener = this._box2dData.listener;\r\n\t\tif (options.listenBeginContact) {\r\n\t\t\tlistener.BeginContact = beginContactHandler;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.listenEndContact) {\r\n\t\t\tlistener.EndContact = endContactHandler;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.listenPreSolve) {\r\n\t\t\tlistener.PreSolve = preSolveHandler;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.listenPostSolve) {\r\n\t\t\tlistener.PostSolve = postSolveHandler;\r\n\t\t}\r\n\t\t\r\n\t\tworld.SetContactListener(listener);\r\n\t\t\r\n\t\tthis.box2dEnabled = true\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param canvas The canvas element on which the content is drawn.\r\n\t * @return Canvas element for debug display.\r\n\t */\r\n\taddDebugDraw( pixiCanvas: HTMLCanvasElement): HTMLCanvasElement {\r\n\t\tconst canvas = document.createElement('canvas');\r\n\t\t\r\n\t\tconst ctx = canvas.getContext('2d');\r\n\t\tif (!ctx) {\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t\t\r\n\t\tcanvas.width = pixiCanvas.width;\r\n\t\tcanvas.height = pixiCanvas.height;\r\n\t\tcanvas.style.width = pixiCanvas.style.width;\r\n\t\tcanvas.style.height = pixiCanvas.style.height;\r\n\t\tcanvas.style.top = pixiCanvas.style.top || '0';\r\n\t\tcanvas.style.left = pixiCanvas.style.left || '0';\r\n\t\tcanvas.style.position = 'absolute';\r\n\t\tcanvas.style.pointerEvents = 'none';\r\n\t\tcanvas.style.zIndex = '100';\r\n\t\t\r\n\t\tconst debugDraw = new DebugDraw();\r\n\t\tdebugDraw.SetSprite(ctx);\r\n\t\tdebugDraw.SetDrawScale(Box2dToPixi);\r\n\t\tdebugDraw.SetFillAlpha(0.5);\r\n\t\tdebugDraw.SetLineThickness(1);\r\n\t\tdebugDraw.SetFlags(DebugDraw.e_shapeBit | DebugDraw.e_jointBit);\r\n\t\t\r\n\t\tthis.world.SetDebugDraw(debugDraw);\r\n\t\t\r\n\t\treturn canvas;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tupdateTask(e: ITickerData): void {\r\n\t\tsuper.updateTask(e);\r\n\t\t\r\n\t\tconst task = this._box2dData.task;\r\n\t\t\r\n\t\tif (!this.taskEnabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttask.done(e);\r\n\t}\r\n\t\r\n\tprivate _handleTick(delta: number) {\r\n\t\tif (!this._box2dData.enabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst world = this._box2dData.world;\r\n\t\t\r\n\t\tworld.Step(delta * this._box2dData.speed / 30, 10, 10);\r\n\t\tworld.ClearForces();\r\n\t\tworld.DrawDebugData();\r\n\t\t\r\n\t\tconst targets = this._box2dData.targets;\r\n\t\t\r\n\t\tfor (const i in this._box2dData.deletes) {\r\n\t\t\tconst b2d = this._box2dData.deletes[i];\r\n\t\t\tdelete(targets[i]);\r\n\t\t\tif (b2d.hasWorldBody()) {\r\n\t\t\t\tworld.DestroyBody(b2d.body);\r\n\t\t\t\tb2d.body = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._box2dData.deletes = [];\r\n\t\tthis.reflect();\r\n\t}\r\n\t\r\n\treflect(): void {\r\n\t\tconst targets = this._box2dData.targets;\r\n\t\t\r\n\t\tconst displayOffsetX = this._box2dData.displayOffsetX;\r\n\t\tconst displayOffsetY = this._box2dData.displayOffsetY;\r\n\t\tconst displayAngle = this._box2dData.displayAngle;\r\n\t\t\r\n\t\tif (displayAngle === 0) {\r\n\t\t\tfor (const i in targets) {\r\n\t\t\t\tconst b2d = targets[i];\r\n\t\t\t\t\r\n\t\t\t\tif (!b2d.hasWorldBody()) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst position = b2d.body.GetPosition();\r\n\t\t\t\t\r\n\t\t\t\tb2d.y = position.y * Box2dToPixi - displayOffsetY;\r\n\t\t\t\tb2d.x = (position.x * Box2dToPixi - displayOffsetX);\r\n\t\t\t\tb2d.rotation = b2d.body.GetAngle();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst isDisplayNegative = this._box2dData.isDisplayNegative;\r\n\t\t\tconst ratio = this._box2dData.perspectiveRatio * displayAngle;\r\n\t\t\t\r\n\t\t\tfor (const i in targets) {\r\n\t\t\t\tconst b2d = targets[i];\r\n\t\t\t\t\r\n\t\t\t\tif (!b2d.hasWorldBody()) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst position = b2d.body.GetPosition();\r\n\t\t\t\t\r\n\t\t\t\tb2d.y = position.y * Box2dToPixi - displayOffsetY;\r\n\t\t\t\tconst s = 1 + b2d.y * displayAngle;\r\n\t\t\t\t\r\n\t\t\t\tif (!isDisplayNegative && s < 0) {\r\n\t\t\t\t\tb2d.renderable = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tb2d.visible = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tb2d.scale.set(s);\r\n\t\t\t\tb2d.x = (position.x * Box2dToPixi - displayOffsetX) * s;\r\n\t\t\t\tb2d.y *= s / ratio;\r\n\t\t\t\tb2d.rotation = b2d.body.GetAngle();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst children = this.removeChildren();\r\n\t\t\tconst n = children.sort((a, b) => {\r\n\t\t\t\tif (a.y === b.y) {\r\n\t\t\t\t\treturn Math.abs(a.x) - Math.abs(b.x);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn a.y - b.y;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.addChild(...n);\r\n\t\t}\r\n\t}\r\n\t\r\n\tget speed(): number {\r\n\t\treturn this._box2dData.speed;\r\n\t}\r\n\t\r\n\tset speed(speed: number) {\r\n\t\tthis._box2dData.speed = speed;\r\n\t}\r\n\t\r\n\tget box2dEnabled(): boolean {\r\n\t\treturn this._box2dData.enabled;\r\n\t}\r\n\t\r\n\tset box2dEnabled(flag: boolean) {\r\n\t\tthis._box2dData.enabled = flag;\r\n\t}\r\n\t\r\n\tget world(): World {\r\n\t\treturn this._box2dData.world;\r\n\t}\r\n\t\r\n\taddBox2d(b2d: Box2dObject): Box2dObject {\r\n\t\tif (!b2d.hasWorldBody()) {\r\n\t\t\tconst body = this._box2dData.world.CreateBody(b2d.getBodyDef());\r\n\t\t\tconst fixtureDefs = b2d.getFixtureDefs();\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < fixtureDefs.length; i++) {\r\n\t\t\t\tbody.CreateFixture(fixtureDefs[i]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tb2d.body = body;\r\n\t\t\t\r\n\t\t\tbody.SetPosition(new Vec2(b2d.x * PixiToBox2d, b2d.y * PixiToBox2d));\r\n\t\t\tbody.SetAngle(b2d.rotation);\r\n\t\t}\r\n\t\t\r\n\t\tb2d.reflect();\r\n\t\tthis.addChild(b2d);\r\n\t\tthis._box2dData.targets[b2d.box2dID] = b2d;\r\n\t\tdelete(this._box2dData.deletes[b2d.box2dID]);\r\n\t\t\r\n\t\treturn b2d;\r\n\t}\r\n\t\r\n\tremoveBox2d(b2d: Box2dObject): Box2dObject {\r\n\t\tthis.removeChild(b2d);\r\n\t\tthis._box2dData.deletes[b2d.box2dID] = b2d;\r\n\t\t\r\n\t\treturn b2d;\r\n\t}\r\n\t\r\n\tget displayOffsetX(): number {\r\n\t\treturn this._box2dData.displayOffsetX;\r\n\t}\r\n\t\r\n\tset displayOffsetX(displayOffsetX: number) {\r\n\t\tthis._box2dData.displayOffsetX = displayOffsetX;\r\n\t}\r\n\t\r\n\tget displayOffsetY(): number {\r\n\t\treturn this._box2dData.displayOffsetY;\r\n\t}\r\n\t\r\n\tset displayOffsetY(displayOffsetY: number) {\r\n\t\tthis._box2dData.displayOffsetY = displayOffsetY;\r\n\t}\r\n\t\r\n\tget displayAngle(): number {\r\n\t\treturn this._box2dData.displayAngle;\r\n\t}\r\n\t\r\n\tset displayAngle(displayAngle: number) {\r\n\t\tthis._box2dData.displayAngle = displayAngle;\r\n\t}\r\n}","import { Container } from 'pixi.js';\r\nimport { World, BodyDef, FixtureDef, Body, Vec2 } from './Box2dAlias';\r\nimport { PixiToBox2d } from './utils';\r\n\r\nexport interface IBox2dObjectOption {\r\n\tdensity?: number;\r\n\tfriction?: number;\r\n\trestitution?: number;\r\n\tisStatic?: boolean\r\n\t\r\n\t/**\r\n\t * The logical sum of the bits representing the collision detection category to which it belongs.\r\n\t */\r\n\tcategoryBits?: number;\r\n\t\r\n\t/**\r\n\t * The logical sum of the \"categoryBits\" for which collision detection with itself is performed.\r\n\t */\r\n\tmaskBits?: number;\r\n\t\r\n\t/**\r\n\t * Whether it is a sensor that judges only the overlap of coordinates.\r\n\t */\r\n\tisSensor?: boolean;\r\n}\r\n\r\nexport interface IBox2dObjectData {\r\n\tid: number;\r\n\tbody: Body;\r\n\tbodyDef: BodyDef;\r\n\tfixtureDefs: FixtureDef[];\r\n\tmaskBits: number;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createBodyDef(isDynamic = false) {\r\n\tconst bodyDef = new BodyDef();\r\n\tisDynamic ? bodyDef.type = Body.b2_dynamicBody : Body.b2_staticBody;\r\n\t\r\n\treturn bodyDef;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst dynamicBodyDef: BodyDef = createBodyDef(true);\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst staticBodyDef: BodyDef = createBodyDef(false);\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction createFixtureDef(options: IBox2dObjectOption = {}, pixi: Container) {\r\n\tconst fixtureDef = new FixtureDef();\r\n\t\r\n\tfixtureDef.density = typeof(options.density) === 'number' ? options.density : fixtureDef.density;\r\n\tfixtureDef.friction = typeof(options.friction) === 'number' ? options.friction : fixtureDef.friction;\r\n\tfixtureDef.restitution = typeof(options.restitution) === 'number' ? options.restitution : fixtureDef.restitution;\r\n\tfixtureDef.filter.categoryBits = typeof(options.categoryBits) === 'number' ? options.categoryBits : fixtureDef.filter.categoryBits;\r\n\tfixtureDef.filter.maskBits = typeof(options.maskBits) === 'number' ? options.maskBits : fixtureDef.filter.maskBits;\r\n\tfixtureDef.isSensor = !!options.isSensor;\r\n\tfixtureDef.userData = pixi;\r\n\t\r\n\treturn fixtureDef;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst _body: Body = new World(new Vec2(0, 0), true).CreateBody(staticBodyDef);\r\n\r\n/**\r\n * [[https://tawaship.github.io/Pixim.js/classes/container.html | Pixim.Container]]\r\n */\r\nexport class Box2dObject extends Container {\r\n\tprotected _box2dData: IBox2dObjectData;\r\n\tprivate static _id = 0;\r\n\t\r\n\t/**\r\n\t * When objects come into contact with each other.\r\n\t * @event\r\n\t * @param opponent The object to collide with.\r\n\t */\r\n\tBeginContact?(opponent: Box2dObject): void {} // eslint-disable-line\r\n\t\r\n\t/**\r\n\t * When objects are separated from each other.\r\n\t * @event\r\n\t * @param opponent The object to collide with.\r\n\t */\r\n\tEndContact?(opponent: Box2dObject): void {} // eslint-disable-line\r\n\t\r\n\t/**\r\n\t * Immediately before performing contact processing between objects.<br />\r\n\t * It will not fire if at least one is \"isSensor = true\".\r\n\t * @event\r\n\t * @param opponent The object to collide with.\r\n\t */\r\n\tPreSolve?(opponent: Box2dObject): void {} // eslint-disable-line\r\n\t\r\n\t/**\r\n\t * Immediately after performing contact processing between objects.<br />\r\n\t * It will not fire if at least one is \"isSensor = true\".\r\n\t * @event\r\n\t * @param opponent The object to collide with.\r\n\t */\r\n\tPostSolve?(opponent: Box2dObject): void {} // eslint-disable-line\r\n\t\r\n\tconstructor(options: IBox2dObjectOption = {}) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tconst fixtureDef = createFixtureDef(options, this);\r\n\t\tthis._box2dData = {\r\n\t\t\tid: Box2dObject._id++,\r\n\t\t\tbody: _body,\r\n\t\t\tbodyDef: options.isStatic ? staticBodyDef : dynamicBodyDef,\r\n\t\t\tfixtureDefs: [fixtureDef],\r\n\t\t\tmaskBits: fixtureDef.filter.maskBits\r\n\t\t};\r\n\t}\r\n\t\r\n\tgetBodyDef(): BodyDef {\r\n\t\treturn this._box2dData.bodyDef;\r\n\t}\r\n\t\r\n\tgetFixtureDefs(): FixtureDef[] {\r\n\t\treturn this._box2dData.fixtureDefs;\r\n\t}\r\n\t\r\n\tget box2dID(): number {\r\n\t\treturn this._box2dData.id;\r\n\t}\r\n\t\r\n\t/**\r\n\t * A [[Body]] instance is created when an object becomes a child of [[WorldContainer]].\r\n\t * However, to keep the code simple, we will return a [[Body]] instance that is shared by all objects if it is not a child.\r\n\t * Therefore, be careful when you get the [[Body]] instance via this property.\r\n\t */\r\n\tget body(): Body {\r\n\t\treturn this._box2dData.body;\r\n\t}\r\n\t\r\n\tset body(body: Body) {\r\n\t\tthis._box2dData.body = body || _body;\r\n\t}\r\n\t\r\n\thasWorldBody(): boolean {\r\n\t\treturn this._box2dData.body !== _body;\r\n\t}\r\n\t\r\n\tsetX(x: number): void {\r\n\t\tthis.x = x;\r\n\t\t\r\n\t\tconst body = this._box2dData.body;\r\n\t\tif (!body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst p = body.GetPosition();\r\n\t\tp.x = x * PixiToBox2d;\r\n\t\tbody.SetPosition(p);\r\n\t}\r\n\t\r\n\tsetY(y: number): void {\r\n\t\tthis.y = y;\r\n\t\t\r\n\t\tconst body = this._box2dData.body;\r\n\t\tif (!body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst p = body.GetPosition();\r\n\t\tp.y = y * PixiToBox2d;\r\n\t\tbody.SetPosition(p);\r\n\t}\r\n\t\r\n\tsetRotation(rotation: number): void {\r\n\t\tthis.rotation = rotation;\r\n\t\t\r\n\t\tconst body = this._box2dData.body;\r\n\t\tif (!body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tbody.SetAngle(rotation);\r\n\t}\r\n\t\r\n\treflect(): void {\r\n\t\tthis.setX(this.x);\r\n\t\tthis.setY(this.y);\r\n\t\tthis.setRotation(this.rotation);\r\n\t\tthis.addMask(this._box2dData.maskBits);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds the object with the specified \"category Bits\" to collision detection.\r\n\t */\r\n\taddMask(bits: number): void {\r\n\t\tthis._box2dData.maskBits |= bits;\r\n\t\t\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet list = this._box2dData.body.GetFixtureList();\r\n\t\t\r\n\t\twhile (list) {\r\n\t\t\tconst data = list.GetFilterData();\r\n\t\t\tdata.maskBits = this._box2dData.maskBits;\r\n\t\t\tlist.SetFilterData(data);\r\n\t\t\t\r\n\t\t\tlist = list.GetNext();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set to perform collision detection with all objects.\r\n\t */\r\n\taddAllMask(): void {\r\n\t\tthis._box2dData.maskBits = 65535;\r\n\t\t\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet list = this._box2dData.body.GetFixtureList();\r\n\t\t\r\n\t\twhile (list) {\r\n\t\t\tconst data = list.GetFilterData();\r\n\t\t\tdata.maskBits = 65535;\r\n\t\t\tlist.SetFilterData(data);\r\n\t\t\t\r\n\t\t\tlist = list.GetNext();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes the object with the specified \"category bit\" from collision detection.\r\n\t */\r\n\tremoveMask(bits: number): void {\r\n\t\tthis._box2dData.maskBits ^= this._box2dData.maskBits & bits;\r\n\t\t\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet list = this._box2dData.body.GetFixtureList();\r\n\t\t\r\n\t\twhile (list) {\r\n\t\t\tconst data = list.GetFilterData();\r\n\t\t\tdata.maskBits = this._box2dData.maskBits;\r\n\t\t\tlist.SetFilterData(data);\r\n\t\t\t\r\n\t\t\tlist = list.GetNext();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Set not to perform collision detection with any object.\r\n\t */\r\n\tremoveAllMask(): void {\r\n\t\tthis._box2dData.maskBits = 0;\r\n\t\t\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet list = this._box2dData.body.GetFixtureList();\r\n\t\t\r\n\t\twhile (list) {\r\n\t\t\tconst data = list.GetFilterData();\r\n\t\t\tdata.maskBits = 0;\r\n\t\t\tlist.SetFilterData(data);\r\n\t\t\t\r\n\t\t\tlist = list.GetNext();\r\n\t\t}\r\n\t}\r\n\t\r\n\ttoDynamic(): void {\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._box2dData.body.SetType(Body.b2_dynamicBody);\r\n\t}\r\n\t\r\n\ttoStatic(): void {\r\n\t\tif (!this._box2dData.body) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis._box2dData.body.SetType(Body.b2_staticBody);\r\n\t}\r\n}\r\n\r\ndelete(Box2dObject.prototype.BeginContact);\r\ndelete(Box2dObject.prototype.EndContact);\r\ndelete(Box2dObject.prototype.PreSolve);\r\ndelete(Box2dObject.prototype.PostSolve);","import { Container } from 'pixi.js';\r\nimport { CircleShape } from './Box2dAlias';\r\nimport { Box2dObject, IBox2dObjectOption } from './Box2dObject';\r\nimport { PixiToBox2d } from './utils';\r\n\r\nexport class Circle extends Box2dObject {\r\n\tconstructor(radius: number, options: IBox2dObjectOption = {}) {\r\n\t\tsuper(options);\r\n\t\t\r\n\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\tfixtureDef.shape = new CircleShape(radius * PixiToBox2d);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a \"Circle\" instance whose radius is the larger width or height of the \"PIXI.Container\" instance at that point.\r\n\t * Note that if you change the shape of the \"PIXI.Container\" instance after creating this method, the appearance and collision detection will not match.\r\n\t */\r\n\tstatic from(pixi: Container, options: IBox2dObjectOption = {}): Circle {\r\n\t\tconst b2d = new Circle(Math.max(pixi.width / 2, pixi.height/ 2), options);\r\n\t\t\r\n\t\tconst c = b2d.addChild(new Container());\r\n\t\tc.addChild(pixi);\r\n\t\t\r\n\t\tconst b = b2d.getLocalBounds();\r\n\t\tc.x = -b.x - pixi.width / 2;\r\n\t\tc.y = -b.y - pixi.height / 2;\r\n\t\t\r\n\t\treturn b2d;\r\n\t}\r\n}","import { Container } from 'pixi.js';\r\nimport { Vec2, PolygonShape } from './Box2dAlias';\r\nimport { Box2dObject, IBox2dObjectOption } from './Box2dObject';\r\nimport { PixiToBox2d }from './utils';\r\n\r\nexport class Rectangle extends Box2dObject {\r\n\tconstructor(width: number, height: number, options: IBox2dObjectOption = {}) {\r\n\t\tsuper(options);\r\n\t\t\r\n\t\twidth *= PixiToBox2d;\r\n\t\theight *= PixiToBox2d;\r\n\t\t\r\n\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\tconst shape = new PolygonShape();\r\n\t\tshape.SetAsArray([\r\n\t\t\tnew Vec2(0, 0),\r\n\t\t\tnew Vec2(width, 0),\r\n\t\t\tnew Vec2(width, height),\r\n\t\t\tnew Vec2(0, height)\r\n\t\t]);\r\n\t\t\r\n\t\tfixtureDef.shape = shape;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Create a \"Rectangle\" instance that circumscribes the shape of the \"PIXI.Container\" instance at that point.\r\n\t * Note that if you change the shape of the \"PIXI.Container\" instance after creating this method, the appearance and collision detection will not match.\r\n\t */\r\n\tstatic from(pixi: Container, options: IBox2dObjectOption = {}): Rectangle {\r\n\t\tconst b2d = new Rectangle(pixi.width, pixi.height, options);\r\n\t\t\r\n\t\tconst c = b2d.addChild(new Container());\r\n\t\tc.addChild(pixi);\r\n\t\t\r\n\t\tconst b = b2d.getLocalBounds();\r\n\t\tc.x = -b.x;\r\n\t\tc.y = -b.y;\r\n\t\t\r\n\t\treturn b2d;\r\n\t}\r\n}","import { Vec2, PolygonShape } from './Box2dAlias';\r\nimport { Box2dObject, IBox2dObjectOption } from './Box2dObject';\r\n\r\nexport class Polygon extends Box2dObject {\r\n\tconstructor(vertices: Vec2[], options: IBox2dObjectOption = {}) {\r\n\t\tsuper(options);\r\n\t\t\r\n\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\tconst shape = new PolygonShape();\r\n\t\tshape.SetAsArray(vertices);\r\n\t\t\r\n\t\tfixtureDef.shape = shape;\r\n\t}\r\n}","import { Vec2, PolygonShape } from './Box2dAlias';\r\nimport { Box2dObject, IBox2dObjectOption } from './Box2dObject';\r\nimport { PixiToBox2d } from './utils';\r\n\r\nexport class Edge extends Box2dObject {\r\n\tconstructor(to: Vec2, options: IBox2dObjectOption = {}) {\r\n\t\tsuper(options);\r\n\t\t\r\n\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\tconst shape = new PolygonShape();\r\n\t\tshape.SetAsEdge(new Vec2(0, 0), new Vec2(to.x * PixiToBox2d, to.y * PixiToBox2d));\r\n\t\t\r\n\t\tfixtureDef.shape = shape;\r\n\t}\r\n}"],"names":["Vec2","Common","Math","b2Vec2","DebugDraw","Dynamics","b2DebugDraw","World","b2World","ContactListener","Contacts","b2Contact","b2ContactListener","BodyDef","b2BodyDef","FixtureDef","b2FixtureDef","Body","b2Body","CircleShape","Collision","Shapes","b2CircleShape","PolygonShape","b2PolygonShape","Box2dToPixi","b2EdgeShape","PixiToBox2d","beginContactHandler","contact","const","dataA","GetFixtureA","GetUserData","dataB","GetFixtureB","emit","endContactHandler","preSolveHandler","postSolveHandler","WorldContainer","options","super","gravityX","gravityY","allowSleep","world","this","_box2dData","listener","enabled","speed","targets","deletes","task","Task","displayOffsetX","displayOffsetY","displayAngle","perspectiveRatio","isDisplayNegative","add","e","_handleTick","delta","first","listenBeginContact","BeginContact","listenEndContact","EndContact","listenPreSolve","PreSolve","listenPostSolve","PostSolve","SetContactListener","box2dEnabled","addDebugDraw","pixiCanvas","canvas","document","createElement","ctx","getContext","width","height","style","top","left","position","pointerEvents","zIndex","debugDraw","SetSprite","SetDrawScale","SetFillAlpha","SetLineThickness","SetFlags","e_shapeBit","e_jointBit","SetDebugDraw","updateTask","taskEnabled","done","Step","ClearForces","DrawDebugData","i","b2d","hasWorldBody","DestroyBody","body","reflect","GetPosition","y","x","rotation","GetAngle","ratio","s","renderable","visible","scale","set","n","removeChildren","sort","a","b","abs","addChild","prototypeAccessors","flag","addBox2d","CreateBody","getBodyDef","fixtureDefs","getFixtureDefs","length","CreateFixture","SetPosition","SetAngle","box2dID","removeBox2d","removeChild","Container","createBodyDef","isDynamic","bodyDef","type","b2_dynamicBody","b2_staticBody","dynamicBodyDef","staticBodyDef","_body","Box2dObject","fixtureDef","pixi","density","friction","restitution","filter","categoryBits","maskBits","isSensor","userData","createFixtureDef","id","_id","isStatic","opponent","setX","p","setY","setRotation","addMask","bits","let","list","GetFixtureList","data","GetFilterData","SetFilterData","GetNext","addAllMask","removeMask","removeAllMask","toDynamic","SetType","toStatic","prototype","Circle","radius","shape","from","max","c","getLocalBounds","Rectangle","SetAsArray","Polygon","vertices","Edge","to","SetAsEdge"],"mappings":"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"}